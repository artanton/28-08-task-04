{"version":3,"file":"static/js/715.04583607.chunk.js","mappings":"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","sources":["Pages/Login/components/LogInForm.js","Pages/Login/LoginPage.js","Pages/Register/RegisterPageStyled.js","Pages/Register/components/RegisterFormStyled.js"],"sourcesContent":["import { Formik } from 'formik';\nimport * as Yup from 'yup';\nimport {\n  Button,\n  ErrorMessageStyled,\n  FieldGroup,\n  FieldStyled,\n  FormStyled,\n} from '../../Register/components/RegisterFormStyled';\nimport { useDispatch } from 'react-redux';\n\nimport { login } from '../../../redux/auth/operators';\n\nconst userSchema = Yup.object().shape({\n  email: Yup.string()\n    .matches(/^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/, 'Incorrect email format')\n    .required('Required'),\n\n  password: Yup.string()\n    .min(6, 'Password has to be at least 6 charts')\n    .required('Required'),\n});\n\nexport const LoginForm = () => {\n  const dispatch = useDispatch();\n\n  const handleSubmit = (values, actions) => {\n    dispatch(\n      login({\n        email:values.email.toLowerCase(),\n        password: values.password,\n      })\n    );\n\n    actions.resetForm();\n  };\n\n  return (\n    <Formik\n      initialValues={{\n        email: '',\n        password: '',\n      }}\n      validationSchema={userSchema}\n      onSubmit={handleSubmit}\n    >\n      <FormStyled>\n        <FieldGroup>\n          E-mail\n          <FieldStyled name=\"email\" type=\"string\" placeholder=\"some@mail.com\" />\n          <ErrorMessageStyled name=\"email\" component=\"span\" />\n        </FieldGroup>\n\n        <FieldGroup>\n          Password\n          <FieldStyled name=\"password\" type=\"string\" placeholder=\"123456\" />\n          <ErrorMessageStyled name=\"password\" component=\"span\" />\n        </FieldGroup>\n\n        <Button type=\"submit\">Sign In </Button>\n      </FormStyled>\n    </Formik>\n  );\n};\n","import { Helmet } from 'react-helmet-async';\n\nimport { LoginForm } from './components/LogInForm';\nimport { Header, Link, TextBlock } from '../Register/RegisterPageStyled';\nimport {useSelector} from 'react-redux';\nimport { selectErrorMessage } from '../../redux/auth/selectors';\n\nexport default function Login() {\n  const errorMessage = useSelector(selectErrorMessage)\n  return (\n    <div>\n      <Helmet>\n        <title>Login</title>\n      </Helmet>\n      <Header>Sign in</Header>\n      <LoginForm />\n      <TextBlock>\n        <p>\n          <Link href=\"/28-08-task-04/register\">Create an Account</Link>\n        </p>\n      </TextBlock>\n      {errorMessage===\"Email is not verified\" &&\"Sannd verification code again\"}\n    </div>\n  );\n}\n","import styled from 'styled-components';\n\nexport const Header = styled.h1`\n  font-size: 30px;\n  padding: ${p => p.theme.padding.norm};\n  text-align: center;\n`;\n\nexport const TextBlock = styled.div`\n  padding: ${p => p.theme.padding.norm};\n  text-align: center;\n`;\n\nexport const Link = styled.a`\n  text-decoration: underline;\n`;","import styled from 'styled-components';\nimport { Form, ErrorMessage, Field } from 'formik';\n\nexport const FormStyled = styled(Form)`\n  border: 1px solid ${p => p.theme.colors.borderGray};\n  border-radius: ${p => p.theme.borderRad.norm};\n  box-shadow: 0 0 4px 0 rgba(0, 0, 0, 0.2);\n\n  padding: ${p => p.theme.padding.huge};\n  display: flex;\n  flex-direction: column;\n  justify-content: flex-end;\n  gap: ${p => p.theme.gap.norm};\n`;\n\nexport const FieldGroup = styled.label`\n\n  display: flex;\n  font-family: Roboto, sans-serif;\n  flex-direction: column;\n  gap: ${p => p.theme.gap.small};\n`;\n\nexport const ErrorMessageStyled = styled(ErrorMessage)`\n  padding: 0;\n  color: red;\n  font-size: 12px; \n`;\nexport const FieldStyled = styled(Field)`\n  min-width: 200px;\n  padding:${p => p.theme.padding.small}; \n  font-size: 0.875rem;\n  border: 1px solid ${p => p.theme.colors.borderGray};\n  border-radius: ${p => p.theme.borderRad.small};\n  box-shadow: 0 0 1px 0 rgba(0, 0, 0, 0.2);\n`;\n\nexport const Button = styled.button`\n  display: inline-flex;\n\n  align-items: center;\n\n  justify-content: center;\n  position: relative;\n  box-sizing: border-box;\n  cursor: pointer;\n  vertical-align: middle;\n  font-family: Roboto, sans-serif;\n  font-weight: 500;\n  font-size: 0.875rem;\n  line-height: 1.75;\n  letter-spacing: 0.02857em;\n  text-transform: uppercase;\n  min-width: 64px;\n  color: rgb(255, 255, 255);\n  background-color: rgb(25, 118, 210);\n  box-shadow: rgba(0, 0, 0, 0.2) 0px 3px 1px -2px,\n    rgba(0, 0, 0, 0.14) 0px 2px 2px 0px, rgba(0, 0, 0, 0.12) 0px 1px 5px 0px;\n  outline: 0px;\n  border-width: 0px;\n  padding: 6px 16px;\n  border-radius: 4px;\n  transition: background-color 250ms cubic-bezier(0.4, 0, 0.2, 1),\n    box-shadow 250ms cubic-bezier(0.4, 0, 0.2, 1),\n    border-color 250ms cubic-bezier(0.4, 0, 0.2, 1),\n    color 250ms cubic-bezier(0.4, 0, 0.2, 1);\n\n  &:hover {\n    background-color: rgb(21, 101, 192);\n    box-shadow: rgba(0, 0, 0, 0.25) 0px 5px 5px -3px,\n      rgba(0, 0, 0, 0.22) 0px 8px 10px 1px, rgba(0, 0, 0, 0.2) 0px 3px 14px 2px;\n  }\n`;\n"],"names":["userSchema","Yup","shape","email","matches","required","password","min","LoginForm","dispatch","useDispatch","_jsx","Formik","initialValues","validationSchema","onSubmit","values","actions","login","toLowerCase","resetForm","children","_jsxs","FormStyled","FieldGroup","FieldStyled","name","type","placeholder","ErrorMessageStyled","component","Button","Login","errorMessage","useSelector","selectErrorMessage","Helmet","Header","TextBlock","Link","href","styled","_templateObject","_taggedTemplateLiteral","p","theme","padding","norm","_templateObject2","_templateObject3","Form","colors","borderGray","borderRad","huge","gap","small","ErrorMessage","Field","_templateObject4","_templateObject5"],"sourceRoot":""}