{"version":3,"file":"static/js/838.66714aae.chunk.js","mappings":"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","sources":["Pages/Register/components/RegisterForm.js","Pages/Register/RegisterPage.js","Pages/Register/RegisterPageStyled.js","Pages/Register/components/RegisterFormStyled.js"],"sourcesContent":["import { Formik } from 'formik';\nimport * as Yup from 'yup';\nimport {\n  Button,\n  ErrorMessageStyled,\n  FieldGroup,\n  FieldStyled,\n  FormStyled,\n} from './RegisterFormStyled';\nimport { useDispatch } from 'react-redux';\n\nimport { register } from '../../../redux/auth/operators';\nimport { useNavigate } from 'react-router-dom';\n\n\nconst userSchema = Yup.object().shape({\n  name: Yup.string()\n    .matches(\n      /^[A-Z][a-z]{1,} [A-Z][a-z]{1,}$/,\n      'Insert Name and Surname please'\n    )\n    .required('Required'),\n\n  email: Yup.string().matches(\n    /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/,\n    'Incorrect email format'\n  ).required('Required'),\n\n  password: Yup.string()\n    .min(6, 'Password has to be at least 6 charts')\n    .required('Required'),\n});\n\nexport const RegisterForm = () => {\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n\n  const handleSubmit = async (values, actions) => {\n    try {\n      \n    \n   await dispatch(\n      register({\n        name: values.name,\n        email:values.email.toLowerCase(),\n        password: values.password,\n      })\n    ).unwrap();\n    navigate(`/login`)\n  } catch (error) {\n    console.log(error.response?.data?.message);\n      \n  }finally\n\n   { actions.resetForm();}\n  };\n\n  return (\n    <Formik\n      initialValues={{\n        name: '',\n        email: '',\n        password: '',\n      }}\n      validationSchema={userSchema}\n      onSubmit={handleSubmit}\n    >\n      <FormStyled>\n        <FieldGroup>\n          Username\n          <FieldStyled name=\"name\" type=\"string\" placeholder=\"John Smith\" />\n          <ErrorMessageStyled name=\"name\" component=\"span\" />\n        </FieldGroup>\n\n        <FieldGroup>\n          E-mail\n          <FieldStyled name=\"email\" type=\"string\" placeholder=\"some@mail.com\" />\n          <ErrorMessageStyled name=\"email\" component=\"span\" />\n        </FieldGroup>\n\n        <FieldGroup>\n          Password\n          <FieldStyled name=\"password\" type=\"string\" placeholder=\"123456\" />\n          <ErrorMessageStyled name=\"password\" component=\"span\" />\n        </FieldGroup>\n\n        <Button type=\"submit\">Create an Account </Button>\n      </FormStyled>\n    </Formik>\n  );\n};\n","import { RegisterForm } from \"./components/RegisterForm\";\nimport { Helmet } from 'react-helmet-async';\nimport { Header, TextBlock, Link } from \"./RegisterPageStyled\";\nimport {useSelector} from 'react-redux';\nimport { selectErrorMessage } from \"../../redux/auth/selectors\";\n// import { useNavigate } from \"react-router-dom\";\n// import { useAuth } from \"../../Hooks\";\n\n\n\n\n\n\nexport default function Register() {\n const errorMessage = useSelector(selectErrorMessage)\n\n \n  return (\n    \n    <div>\n      <Helmet>\n        <title>Registration</title>\n      </Helmet>\n      <Header>Sign Up</Header>\n      <RegisterForm />\n      <TextBlock>\n        <p>\n        Already have an account?\n        </p>\n        <p>\n           <Link href=\"/28-08-task-04/login\">Sign in</Link> \n        </p>        \n      </TextBlock>\n      \n      {errorMessage === \"Email in use\" && \"Sannd verification code again\"}\n    </div>\n    \n    \n  );\n}\n","import styled from 'styled-components';\n\nexport const Header = styled.h1`\n  font-size: 30px;\n  padding: ${p => p.theme.padding.norm};\n  text-align: center;\n`;\n\nexport const TextBlock = styled.div`\n  padding: ${p => p.theme.padding.norm};\n  text-align: center;\n`;\n\nexport const Link = styled.a`\n  text-decoration: underline;\n`;","import styled from 'styled-components';\nimport { Form, ErrorMessage, Field } from 'formik';\n\nexport const FormStyled = styled(Form)`\n  border: 1px solid ${p => p.theme.colors.borderGray};\n  border-radius: ${p => p.theme.borderRad.norm};\n  box-shadow: 0 0 4px 0 rgba(0, 0, 0, 0.2);\n\n  padding: ${p => p.theme.padding.huge};\n  display: flex;\n  flex-direction: column;\n  justify-content: flex-end;\n  gap: ${p => p.theme.gap.norm};\n`;\n\nexport const FieldGroup = styled.label`\n\n  display: flex;\n  font-family: Roboto, sans-serif;\n  flex-direction: column;\n  gap: ${p => p.theme.gap.small};\n`;\n\nexport const ErrorMessageStyled = styled(ErrorMessage)`\n  padding: 0;\n  color: red;\n  font-size: 12px; \n`;\nexport const FieldStyled = styled(Field)`\n  min-width: 200px;\n  padding:${p => p.theme.padding.small}; \n  font-size: 0.875rem;\n  border: 1px solid ${p => p.theme.colors.borderGray};\n  border-radius: ${p => p.theme.borderRad.small};\n  box-shadow: 0 0 1px 0 rgba(0, 0, 0, 0.2);\n`;\n\nexport const Button = styled.button`\n  display: inline-flex;\n\n  align-items: center;\n\n  justify-content: center;\n  position: relative;\n  box-sizing: border-box;\n  cursor: pointer;\n  vertical-align: middle;\n  font-family: Roboto, sans-serif;\n  font-weight: 500;\n  font-size: 0.875rem;\n  line-height: 1.75;\n  letter-spacing: 0.02857em;\n  text-transform: uppercase;\n  min-width: 64px;\n  color: rgb(255, 255, 255);\n  background-color: rgb(25, 118, 210);\n  box-shadow: rgba(0, 0, 0, 0.2) 0px 3px 1px -2px,\n    rgba(0, 0, 0, 0.14) 0px 2px 2px 0px, rgba(0, 0, 0, 0.12) 0px 1px 5px 0px;\n  outline: 0px;\n  border-width: 0px;\n  padding: 6px 16px;\n  border-radius: 4px;\n  transition: background-color 250ms cubic-bezier(0.4, 0, 0.2, 1),\n    box-shadow 250ms cubic-bezier(0.4, 0, 0.2, 1),\n    border-color 250ms cubic-bezier(0.4, 0, 0.2, 1),\n    color 250ms cubic-bezier(0.4, 0, 0.2, 1);\n\n  &:hover {\n    background-color: rgb(21, 101, 192);\n    box-shadow: rgba(0, 0, 0, 0.25) 0px 5px 5px -3px,\n      rgba(0, 0, 0, 0.22) 0px 8px 10px 1px, rgba(0, 0, 0, 0.2) 0px 3px 14px 2px;\n  }\n`;\n"],"names":["userSchema","Yup","shape","name","matches","required","email","password","min","RegisterForm","dispatch","useDispatch","navigate","useNavigate","handleSubmit","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","values","actions","_error$response","_error$response$data","_context","prev","next","register","toLowerCase","unwrap","t0","console","log","response","data","message","resetForm","finish","stop","_x","_x2","apply","arguments","_jsx","Formik","initialValues","validationSchema","onSubmit","children","_jsxs","FormStyled","FieldGroup","FieldStyled","type","placeholder","ErrorMessageStyled","component","Button","Register","errorMessage","useSelector","selectErrorMessage","Helmet","Header","TextBlock","Link","href","styled","_templateObject","_taggedTemplateLiteral","p","theme","padding","norm","_templateObject2","_templateObject3","Form","colors","borderGray","borderRad","huge","gap","small","ErrorMessage","Field","_templateObject4","_templateObject5"],"sourceRoot":""}